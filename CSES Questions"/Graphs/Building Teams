// Problem Link - https://cses.fi/problemset/task/1668
/* By Navneet Shukla */
#include<bits/stdc++.h>
//#include<ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
using namespace std;
#define ll 				long long int
#define ld				long double
#define mod             1000000007
#define inf             1e18
#define endl			"\n"
#define pb 				emplace_back
#define vi              vector<ll>
#define vs				vector<string>
#define pii             pair<ll,ll>
#define ump				unordered_map
//#define mp 				map
#define pq_max          priority_queue<ll>
#define pq_min          priority_queue<ll,vi,greater<ll> >
#define ff 				first
#define ss 				second
#define mid(l,r)        (l+(r-l)/2)
#define loop(i,a,b) 	for(int i=(a);i<=(b);i++)
#define looprev(i,a,b) 	for(int i=(a);i>=(b);i--)
#define log(args...) 	{ string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
#define logarr(arr,a,b)	for(int z=(a);z<=(b);z++) cout<<(arr[z])<<" ";cout<<endl;	
#define token(str,ch)	(std::istringstream var((str)); vs v; string t; while(getline((var), t, (ch))) {v.pb(t);} return v;)
vs tokenizer(string str,char ch) {std::istringstream var((str)); vs v; string t; while(getline((var), t, (ch))) {v.pb(t);} return v;}


void err(istream_iterator<string> it) {}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
	cout << *it << " = " << a << endl;
	err(++it, args...);
}
//typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;

void file_i_o()
{
    ios_base::sync_with_stdio(0); 
    cin.tie(0); 
    cout.tie(0);
	#ifndef ONLINE_JUDGE
	    freopen("input.txt", "r", stdin);
	    freopen("output.txt", "w", stdout);
	#endif
}
ll modularExponentiation(ll x,ll n,ll M)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%M,n/2,M);
    else                             //n is odd
        return (x*modularExponentiation((x*x)%M,(n-1)/2,M))%M;

}
map<int,list<int>>mp;
map<int,bool>visited;
int cnt=0;
void join(int a,int b)
{
	mp[a].pb(b);
	mp[b].pb(a);
}
void bfs(int src,int parent[])
{
	queue<int>q;
	visited[src]=true;
	q.push(src);
	while(!q.empty())
	{
		int t=q.front();
		q.pop();
		for(auto i:mp[t])
		{
			if(!visited[i])
			{
				parent[i]=(parent[t]+1)%2;
				visited[i]=true;
				q.push(i);
			}
			else if(visited[i]==true and parent[i]==parent[t])
		{
			cnt++;

		}
		}
	}
}
int main(int argc, char const *argv[]) {
	file_i_o();
	int n,m;
	cin>>n>>m;
	int parent[n+1]={0};
	while(m--)
	{
		int a,b;
		cin>>a>>b;
		join(a,b);
	}
	loop(i,1,n) visited[i]=false;
	loop(i,1,n)
	{
		if(!visited[i])
		{
			parent[i]=0;
			bfs(i,parent);
		}
		
	}
	if(cnt!=0) cout<<"IMPOSSIBLE"<<endl;
	else{
	loop(i,1,n) cout<<parent[i]+1<<" ";
	cout<<endl;
}
	return 0;
}



This is the question of Bipartite Graph. In this question I have first done the the DFS algorithm and to each vertex i have assigned a group number if that vertex is not visited.
If the vertex is visited and its colour is same as its parent then i ahve taken a global variable to check this condition.
