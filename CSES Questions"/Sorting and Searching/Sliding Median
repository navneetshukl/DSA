// Problem Link - https://cses.fi/problemset/task/1076/
/* By Navneet Shukla*/
#include<bits/stdc++.h>
///using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll 				long long int
#define ld				long double
#define mod             1000000007
#define inf             1e18
#define endl			"\n"
#define pb 				emplace_back
#define vi              vector<ll>
#define vs				vector<string>
#define pii             pair<ll,ll>
#define ump				unordered_map
#define mpa 				make_pair
#define pq_max          priority_queue<ll>
#define pq_min          priority_queue<ll,vi,greater<ll> >
#define ff 				first
#define ss 				second
#define mid(l,r)        (l+(r-l)/2)
#define loop(i,a,b) 	for(int i=(a);i<=(b);i++)
#define looprev(i,a,b) 	for(int i=(a);i>=(b);i--)
#define log(args...) 	{ string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
#define logarr(arr,a,b)	for(int z=(a);z<=(b);z++) cout<<(arr[z])<<" ";cout<<endl;	
#define token(str,ch)	(std::istringstream var((str)); vs v; string t; while(getline((var), t, (ch))) {v.pb(t);} return v;)
vs tokenizer(string str,char ch) {std::istringstream var((str)); vs v; string t; while(getline((var), t, (ch))) {v.pb(t);} return v;}


void err(istream_iterator<string> it) {}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
	cout << *it << " = " << a << endl;
	err(++it, args...);
}
typedef tree<pii, null_type, less<pii>, rb_tree_tag, tree_order_statistics_node_update> pbds;

 void file_i_o()
 {
     ios_base::sync_with_stdio(0); 
    cin.tie(0); 
     cout.tie(0);
	#ifndef ONLINE_JUDGE
	    freopen("input.txt", "r", stdin);
 	    freopen("output.txt", "w", stdout);
 	#endif
 }

int modularExponentiation(int x,int n,int M)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%M,n/2,M);
    else                             //n is odd
        return (x*modularExponentiation((x*x)%M,(n-1)/2,M))%M;

}

int main(int argc, char const *argv[]) {
	file_i_o();
	pbds pb;
	ll n,k;
	cin>>n>>k;
	ll m[n];
	loop(i,0,n-1) cin>>m[i];
	loop(i,0,k-1)
	{
		pb.insert(mpa(m[i],i));
	}
	if(k%2!=0)
	{
		pii a=*(pb.find_by_order(k/2));
		cout<<a.ff<<" ";
	}
	else
	{
		pii a=*(pb.find_by_order(k/2));
		pii b=*(pb.find_by_order((k-1)/2));
		cout<<min(a.ff,b.ff)<<" ";
	}
	int ind=0;
	loop(i,k,n-1)
	{
		pii x={m[ind],ind};
		pb.erase(x);
		pb.insert({m[i],i});
		if(k%2!=0)
	{
		pii a=*(pb.find_by_order(k/2));
		cout<<a.ff<<" ";
	}
	else
	{
		pii a=*(pb.find_by_order(k/2));
		pii b=*(pb.find_by_order((k-1)/2));
		cout<<min(a.ff,b.ff)<<" ";
	}
	ind++;

	}
	return 0;
}
