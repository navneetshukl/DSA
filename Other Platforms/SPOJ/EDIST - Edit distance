    #include<iostream>
    #include<cstring>
    using namespace std;
    int dp[5005][5005];
    int solve(string& s1,string& s2,int i,int j)
    {
        if(i==s1.length()||j==s2.length())
        {
            return dp[i][j]=max(s1.length()-i,s2.length()-j);
        }
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        if(s1[i]==s2[j])
        {
            return dp[i][j]=solve(s1,s2,i+1,j+1);
        }
        else{
            return dp[i][j]=1+min(solve(s1,s2,i+1,j),min(solve(s1,s2,i,j+1),solve(s1,s2,i+1,j+1)));
        }
    }
    int main()
    {
        int t;
        cin>>t;
        while(t--)
        {
        string s1,s2;
        cin>>s1>>s2;
        memset(dp,-1,sizeof dp);
        cout<<solve(s1,s2,0,0)<<endl;
        }
    }
     
