class Solution
{
	public:
	stack<int>st;
	map<int,bool>visited;
	void dfs(int src,vector<int>adj[]){
	    visited[src]=true;
	    for(auto i:adj[src]){
	        if(!visited[i]){
	            dfs(i,adj);
	        }
	    }
	    st.push(src);
	    
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    for(int i=0;i<V;i++){
	        if(visited[i]==false) dfs(i,adj);
	    }
	    vector<int>ans;
	    while(!st.empty()){
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	}
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   Run this algorithm from every non visited node and after completing all the traversal of the node push it to stack and  get the answer.

