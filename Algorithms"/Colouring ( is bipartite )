/************************* There can be more than one connected component***************************/


    map<int,vector<int>>mp;
    map<int,int>colour;
    void join(int a,int b)
    {
        mp[a].push_back(b);
        mp[b].push_back(a);
    }
    bool bfs(int src)
    {
        queue<int>q;
        colour[src]=0;
        q.push(src);
        while(!q.empty())
        {
            int no=q.front();
            q.pop();
            for(auto i:mp[no])
            {
                if(colour[i]==-1)
                {
                    colour[i]=1-colour[no];
                    q.push(i);
                }
                else if(colour[i]==colour[no])
                    return false;
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        for(int i=0;i<n;i++)
        {
            int si=graph[i].size();
            for(int j=0;j<si;j++)
            {
                join(i,graph[i][j]);
            }
        }
        for(auto i:mp)
        {
            colour[i.first]=-1;
        }
        bool b=true;
        for(int i=0;i<n;i++)
        {
            if(colour[i]==-1)
            {
                b=b and bfs(i);
            }
        }
        return b;
    }
